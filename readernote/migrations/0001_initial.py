# Generated by Django 3.0.8 on 2020-08-23 22:07

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='article',
            fields=[
                ('articleID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('is_article', models.CharField(max_length=100)),
                ('article_title', models.CharField(max_length=100, null=True)),
                ('writer_fname', models.CharField(max_length=100, null=True)),
                ('writer_sname', models.CharField(max_length=100, null=True)),
                ('writer_lname', models.CharField(max_length=100, null=True)),
                ('article_type', models.CharField(max_length=200, null=True)),
                ('read_purpose', models.TextField(null=True)),
                ('article_idea', models.TextField(null=True)),
                ('article_url', models.CharField(max_length=200, null=True)),
                ('start_read_date', models.DateTimeField(null=True)),
                ('end_read_date', models.DateTimeField(null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='book',
            fields=[
                ('bookID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('is_book', models.CharField(max_length=100)),
                ('book_title', models.CharField(max_length=100, null=True)),
                ('author_fname', models.CharField(max_length=100, null=True)),
                ('author_sname', models.CharField(max_length=100, null=True)),
                ('author_lname', models.CharField(max_length=100, null=True)),
                ('dar_alnashr', models.CharField(max_length=200, null=True)),
                ('published_date', models.CharField(max_length=200, null=True)),
                ('read_purpose', models.CharField(max_length=200, null=True)),
                ('book_idea', models.CharField(max_length=200, null=True)),
                ('start_read_date', models.DateTimeField(null=True)),
                ('end_read_date', models.DateTimeField(null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='broadcast',
            fields=[
                ('bcastID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('is_broadcast', models.CharField(max_length=100)),
                ('bcast_title', models.CharField(max_length=100, null=True)),
                ('presenter_fname', models.CharField(max_length=100, null=True)),
                ('presenter_sname', models.CharField(max_length=100, null=True)),
                ('presenter_lname', models.CharField(max_length=100, null=True)),
                ('bcast_type', models.CharField(max_length=200, null=True)),
                ('listen_purpose', models.CharField(max_length=200, null=True)),
                ('bcast_idea', models.CharField(max_length=200, null=True)),
                ('bcast_url', models.CharField(max_length=200, null=True)),
                ('start_listen_date', models.DateTimeField(null=True)),
                ('end_listen_date', models.DateTimeField(null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='lecture',
            fields=[
                ('lectID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('is_lecture', models.CharField(max_length=100)),
                ('lect_title', models.CharField(max_length=100, null=True)),
                ('lecturer_fname', models.CharField(max_length=100, null=True)),
                ('lecturer_sname', models.CharField(max_length=100, null=True)),
                ('lecturer_lname', models.CharField(max_length=100, null=True)),
                ('lect_type', models.CharField(max_length=200, null=True)),
                ('watch_purpose', models.CharField(max_length=200, null=True)),
                ('lect_idea', models.CharField(max_length=200, null=True)),
                ('start_lect_date', models.DateTimeField(null=True)),
                ('end_lect_date', models.DateTimeField(null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('phoneNo', models.CharField(max_length=200, unique=True)),
                ('gender', models.CharField(max_length=100, null=True)),
                ('location', models.CharField(max_length=100, null=True)),
                ('fav_books', models.CharField(max_length=255, null=True)),
                ('fav_vid', models.CharField(max_length=100, null=True)),
                ('fav_bcast', models.CharField(max_length=100, null=True)),
                ('bio', models.TextField(default='')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='user_info_for_download_free',
            fields=[
                ('userInfoID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('fname', models.CharField(max_length=100)),
                ('lname', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=200)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='video',
            fields=[
                ('videoID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('is_video', models.CharField(max_length=100)),
                ('video_title', models.CharField(max_length=100, null=True)),
                ('presenter_fname', models.CharField(max_length=100, null=True)),
                ('presenter_sname', models.CharField(max_length=100, null=True)),
                ('presenter_lname', models.CharField(max_length=100, null=True)),
                ('video_type', models.CharField(max_length=200, null=True)),
                ('watch_purpose', models.CharField(max_length=200, null=True)),
                ('video_idea', models.CharField(max_length=200, null=True)),
                ('video_url', models.CharField(max_length=200, null=True)),
                ('start_watch_date', models.DateTimeField(null=True)),
                ('end_watch_date', models.DateTimeField(null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.MyUser')),
            ],
        ),
        migrations.CreateModel(
            name='video_trans',
            fields=[
                ('tranID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('tran', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('videoID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.video')),
            ],
        ),
        migrations.CreateModel(
            name='video_terms',
            fields=[
                ('termID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('term', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('videoID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.video')),
            ],
        ),
        migrations.CreateModel(
            name='video_subjects',
            fields=[
                ('subjectID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('subject', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('videoID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.video')),
            ],
        ),
        migrations.CreateModel(
            name='video_questions',
            fields=[
                ('questionID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('question', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('videoID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.video')),
            ],
        ),
        migrations.CreateModel(
            name='video_ideas',
            fields=[
                ('ideaID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('idea', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('videoID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.video')),
            ],
        ),
        migrations.CreateModel(
            name='video_freespaces',
            fields=[
                ('freespaceID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('freespace_title', models.CharField(max_length=100, null=True)),
                ('freespace', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('videoID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.video')),
            ],
        ),
        migrations.CreateModel(
            name='video_dates',
            fields=[
                ('dateID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('date', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('videoID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.video')),
            ],
        ),
        migrations.CreateModel(
            name='video_comments',
            fields=[
                ('commentID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('videoID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.video')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phoneNo', models.CharField(max_length=200, unique=True)),
                ('gender', models.CharField(max_length=100, null=True)),
                ('bio', models.TextField(default='')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='readernote.MyUser')),
            ],
        ),
        migrations.CreateModel(
            name='post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('body', models.TextField()),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='myfavourite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, null=True)),
                ('no', models.CharField(max_length=100)),
                ('userID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.MyUser')),
            ],
        ),
        migrations.CreateModel(
            name='lecture_trans',
            fields=[
                ('tranID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('tran', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('lectureID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.lecture')),
            ],
        ),
        migrations.CreateModel(
            name='lecture_terms',
            fields=[
                ('termID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('term', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('lectureID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.lecture')),
            ],
        ),
        migrations.CreateModel(
            name='lecture_subjects',
            fields=[
                ('subjectID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('subject', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('lectureID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.lecture')),
            ],
        ),
        migrations.CreateModel(
            name='lecture_questions',
            fields=[
                ('questionID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('question', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('lectureID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.lecture')),
            ],
        ),
        migrations.CreateModel(
            name='lecture_ideas',
            fields=[
                ('ideaID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('idea', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('lectureID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.lecture')),
            ],
        ),
        migrations.CreateModel(
            name='lecture_freespaces',
            fields=[
                ('freespaceID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('freespace_title', models.CharField(max_length=100, null=True)),
                ('freespace', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('lectureID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.lecture')),
            ],
        ),
        migrations.CreateModel(
            name='lecture_dates',
            fields=[
                ('dateID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('date', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('lectureID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.lecture')),
            ],
        ),
        migrations.CreateModel(
            name='lecture_comments',
            fields=[
                ('commentID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('lectureID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.lecture')),
            ],
        ),
        migrations.AddField(
            model_name='lecture',
            name='userID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.MyUser'),
        ),
        migrations.CreateModel(
            name='broadcast_trans',
            fields=[
                ('tranID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('tran', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('broadcastID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.broadcast')),
            ],
        ),
        migrations.CreateModel(
            name='broadcast_terms',
            fields=[
                ('termID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('term', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('broadcastID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.broadcast')),
            ],
        ),
        migrations.CreateModel(
            name='broadcast_subjects',
            fields=[
                ('subjectID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('subject', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('broadcastID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.broadcast')),
            ],
        ),
        migrations.CreateModel(
            name='broadcast_questions',
            fields=[
                ('questionID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('question', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('broadcastID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.broadcast')),
            ],
        ),
        migrations.CreateModel(
            name='broadcast_ideas',
            fields=[
                ('ideaID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('idea', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('broadcastID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.broadcast')),
            ],
        ),
        migrations.CreateModel(
            name='broadcast_freespaces',
            fields=[
                ('freespaceID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('freespace_title', models.CharField(max_length=100, null=True)),
                ('freespace', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('broadcastID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.broadcast')),
            ],
        ),
        migrations.CreateModel(
            name='broadcast_dates',
            fields=[
                ('dateID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('date', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('broadcastID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.broadcast')),
            ],
        ),
        migrations.CreateModel(
            name='broadcast_comments',
            fields=[
                ('commentID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('broadcastID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.broadcast')),
            ],
        ),
        migrations.AddField(
            model_name='broadcast',
            name='userID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.MyUser'),
        ),
        migrations.CreateModel(
            name='book_trans',
            fields=[
                ('tranID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('tran', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('bookID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.book')),
            ],
        ),
        migrations.CreateModel(
            name='book_terms',
            fields=[
                ('termID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('term', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('bookID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.book')),
            ],
        ),
        migrations.CreateModel(
            name='book_subjects',
            fields=[
                ('subjectID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('subject', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('bookID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.book')),
            ],
        ),
        migrations.CreateModel(
            name='book_questions',
            fields=[
                ('questionID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('question', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('bookID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.book')),
            ],
        ),
        migrations.CreateModel(
            name='book_ideas',
            fields=[
                ('ideaID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('idea', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('bookID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.book')),
            ],
        ),
        migrations.CreateModel(
            name='book_freespaces',
            fields=[
                ('freespaceID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('freespace_title', models.CharField(max_length=100, null=True)),
                ('freespace', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('bookID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.book')),
            ],
        ),
        migrations.CreateModel(
            name='book_dates',
            fields=[
                ('dateID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('date', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('bookID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.book')),
            ],
        ),
        migrations.CreateModel(
            name='book_comments',
            fields=[
                ('commentID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('bookID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.book')),
            ],
        ),
        migrations.AddField(
            model_name='book',
            name='userID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.MyUser'),
        ),
        migrations.CreateModel(
            name='article_trans',
            fields=[
                ('tranID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('tran', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('articleID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.article')),
            ],
        ),
        migrations.CreateModel(
            name='article_terms',
            fields=[
                ('termID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('term', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('articleID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.article')),
            ],
        ),
        migrations.CreateModel(
            name='article_subjects',
            fields=[
                ('subjectID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('subject', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('articleID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.article')),
            ],
        ),
        migrations.CreateModel(
            name='article_questions',
            fields=[
                ('questionID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('question', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('articleID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.article')),
            ],
        ),
        migrations.CreateModel(
            name='article_ideas',
            fields=[
                ('ideaID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('idea', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('articleID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.article')),
            ],
        ),
        migrations.CreateModel(
            name='article_freespaces',
            fields=[
                ('freespaceID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('freespace_title', models.CharField(max_length=100, null=True)),
                ('freespace', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('articleID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.article')),
            ],
        ),
        migrations.CreateModel(
            name='article_dates',
            fields=[
                ('dateID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('date', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('articleID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.article')),
            ],
        ),
        migrations.CreateModel(
            name='article_comments',
            fields=[
                ('commentID', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('pageNo', models.CharField(max_length=100, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True, null=True)),
                ('articleID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.article')),
            ],
        ),
        migrations.AddField(
            model_name='article',
            name='userID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='readernote.MyUser'),
        ),
    ]
